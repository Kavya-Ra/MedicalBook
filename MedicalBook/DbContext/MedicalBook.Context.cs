//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MedicalBook.DbContext
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MedicalBookEntities : DbContext
    {
        public MedicalBookEntities()
            : base("name=MedicalBookEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<author> authors { get; set; }
        public virtual DbSet<cart_item> cart_item { get; set; }
        public virtual DbSet<discount> discounts { get; set; }
        public virtual DbSet<Menu> Menus { get; set; }
        public virtual DbSet<order_details> order_details { get; set; }
        public virtual DbSet<order_items> order_items { get; set; }
        public virtual DbSet<payment_details> payment_details { get; set; }
        public virtual DbSet<product> products { get; set; }
        public virtual DbSet<product_category> product_category { get; set; }
        public virtual DbSet<product_image> product_image { get; set; }
        public virtual DbSet<product_inventory> product_inventory { get; set; }
        public virtual DbSet<product_maincategory> product_maincategory { get; set; }
        public virtual DbSet<productcategory_image> productcategory_image { get; set; }
        public virtual DbSet<publisher> publishers { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<shopping_session> shopping_session { get; set; }
        public virtual DbSet<SubMenu_1> SubMenu_1 { get; set; }
        public virtual DbSet<SubMenu_2> SubMenu_2 { get; set; }
        public virtual DbSet<user> users { get; set; }
        public virtual DbSet<user_address> user_address { get; set; }
        public virtual DbSet<user_payment> user_payment { get; set; }
    
        public virtual ObjectResult<GetCategoryWiseImage_Result> GetCategoryWiseImage()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCategoryWiseImage_Result>("GetCategoryWiseImage");
        }
    
        public virtual ObjectResult<GetProductByCategoryId_Result> GetProductByCategoryId(Nullable<int> catid)
        {
            var catidParameter = catid.HasValue ?
                new ObjectParameter("catid", catid) :
                new ObjectParameter("catid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProductByCategoryId_Result>("GetProductByCategoryId", catidParameter);
        }
    
        public virtual ObjectResult<GetProductBySearch_Result> GetProductBySearch(string search)
        {
            var searchParameter = search != null ?
                new ObjectParameter("search", search) :
                new ObjectParameter("search", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProductBySearch_Result>("GetProductBySearch", searchParameter);
        }
    
        public virtual ObjectResult<GetProductWithImageList_Result> GetProductWithImageList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProductWithImageList_Result>("GetProductWithImageList");
        }

        public System.Data.Entity.DbSet<MedicalBook.DbContext.GetProductByCategoryId_Result> GetProductByCategoryId_Result { get; set; }
    }
}
